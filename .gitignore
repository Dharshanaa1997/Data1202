#Import Python Libraries
import pandas as pd
#Read csv file
df = pd.read_csv("Salaries.csv")
#Find how many records this data frame has
df.shape
(78, 6)
#How many elements are there?
df.size
468
#What are the column names?
df.columns
Index(['rank', 'discipline', 'phd', 'service', 'sex', 'salary'], dtype='object')
#What types of columns we have in this data frame?
df.dtypes
rank          object
discipline    object
phd            int64
service        int64
sex           object
salary         int64
dtype: object
#Check a particular column type
df.phd.dtype
dtype('int64')
Correct data format
We are almost there!
The last step in data cleaning is checking and making sure that all data is in the correct format (int, float, text or other).

In Pandas, we use

.dtype() to check the data type

.astype() to change the data type

#Read csv file
df = pd.read_csv("Auto.csv")
#Lets list the data types for each column
# method 1
df.dtypes
#Method 2
df.info()
As we can see above, some columns are not of the correct data type. Numerical variables should have type 'float' or 'int', and variables with strings such as categories should have type 'object'. For example, 'bore' and 'stroke' variables are numerical values that describe the engines, so we should expect them to be of the type 'float' or 'int'; however, they are shown as type 'object'. We have to convert data types into a proper format for each column using the "astype()" method.

#Convert data types to proper format

df[["bore", "stroke"]] = df[["bore", "stroke"]].astype("float")
df[["normalized-losses"]] = df[["normalized-losses"]].astype("int")
df[["price"]] = df[["price"]].astype("float")
df[["peak-rpm"]] = df[["peak-rpm"]].astype("float")
# Check the columns after the conversion
df.dtypes
